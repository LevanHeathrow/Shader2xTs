{
  "ver": "1.0.15",
  "uuid": "6cf6cdf9-601f-4e1d-bd71-3b6cede31ae6",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision mediump float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\n#if USE_TEXTURE\n  attribute mediump vec2 a_uv0;\n  varying mediump vec2 v_uv0;\n#endif\nattribute lowp vec4 a_color; \nvarying lowp vec4 v_color;\n\n void main () {\n    vec4 pos = cc_matViewProj * vec4(a_position, 1);\n    #if USE_TEXTURE\n      v_uv0 = a_uv0;\n    #endif\n    v_color = a_color;\n    gl_Position = pos;\n}\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision mediump float;\n\n#if USE_TEXTURE\n  uniform sampler2D texture;\n  varying mediump vec2 v_uv0;\n#endif\nvarying lowp vec4 v_color;\nuniform vec3 iResolution;\n\nvoid main()\n{\n  vec2 onePixel = vec2(1.0 / iResolution.x, 1.0 / iResolution.y);\n\n  vec4 color = texture2D(texture, v_uv0.xy);\n  vec4 colorRight = texture2D(texture, v_uv0.xy + vec2(0,onePixel.t));\n  vec4 colorBottom = texture2D(texture, v_uv0.xy + vec2(onePixel.s,0));\n\n  color.r = 3.0* sqrt( (color.r - colorRight.r) * (color.r - colorRight.r) + (color.r - colorBottom.r) * (color.r - colorBottom.r) );\n  color.g = 3.0* sqrt( (color.g - colorRight.g) * (color.g - colorRight.g) + (color.g - colorBottom.g) * (color.g - colorBottom.g) );\n  color.b = 3.0* sqrt( (color.b - colorRight.b) * (color.b - colorRight.b) + (color.b - colorBottom.b) * (color.b - colorBottom.b) );\n\n  color.r >1.0 ? 1.0 : color.r;\n  color.g >1.0 ? 1.0 : color.g;\n  color.b >1.0 ? 1.0 : color.b;\n  gl_FragColor = vec4(color.rgb, 1);\n}\n\n\n"
    }
  ],
  "subMetas": {}
}