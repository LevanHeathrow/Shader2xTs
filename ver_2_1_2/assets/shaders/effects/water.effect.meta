{
  "ver": "1.0.15",
  "uuid": "e5950265-980e-4667-9c1a-1074cabb5f05",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision mediump float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\n#if USE_TEXTURE\n  attribute mediump vec2 a_uv0;\n  varying mediump vec2 v_uv0;\n#endif\nattribute lowp vec4 a_color; \nvarying lowp vec4 v_color;\n\n void main () {\n    vec4 pos = cc_matViewProj * vec4(a_position, 1);\n    #if USE_TEXTURE\n      v_uv0 = a_uv0;\n    #endif\n    v_color = a_color;\n    gl_Position = pos;\n}\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision mediump float;\n\n#if USE_TEXTURE\n  uniform sampler2D texture;\n  varying mediump vec2 v_uv0;\n#endif\nvarying lowp vec4 v_color;\nuniform vec3 iResolution;\nuniform float time;\n#define F cos(x-y)*cos(y),sin(x+y)*sin(y)\n\nvec2 s(vec2 p)\n{\n  float d=time*0.2,x=8.*(p.x+d),y=8.*(p.y+d);\n  return vec2(F);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n  vec2 rs = iResolution.xy;\n  \n  vec2 uv = fragCoord;\n  vec2 q = uv+2./iResolution.x*(s(uv)-s(uv+rs));\n  \n  \n  fragColor = texture2D(texture, q);\n}\nvoid main()\n{\n  mainImage(gl_FragColor, v_uv0.xy);\n}\n\n\n"
    }
  ],
  "subMetas": {}
}