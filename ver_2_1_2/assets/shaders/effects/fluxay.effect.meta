{
  "ver": "1.0.15",
  "uuid": "fc8bc8cb-2e01-4dd2-9eb9-6a2fb029aafd",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision mediump float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\n#if USE_TEXTURE\n  attribute mediump vec2 a_uv0;\n  varying mediump vec2 v_uv0;\n#endif\nattribute lowp vec4 a_color; \nvarying lowp vec4 v_color;\n\n void main () {\n    vec4 pos = cc_matViewProj * vec4(a_position, 1);\n    #if USE_TEXTURE\n      v_uv0 = a_uv0;\n    #endif\n    v_color = a_color;\n    gl_Position = pos;\n}\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision mediump float;\nuniform lowp vec4 color;\nuniform lowp float time;\nuniform mediump float offset;\nuniform mediump float strength;\nuniform mediump float width;\n\n#if USE_TEXTURE\n  uniform sampler2D texture;\n  varying mediump vec2 v_uv0;\n#endif\nvarying lowp vec4 v_color;\n\nvoid main()\n{\n  #if USE_TEXTURE\n      vec4 color_temp = v_color;\n      vec4 src_color = color_temp*texture2D(texture, v_uv0);\n      float start = tan(time/1.414); \n      if(v_uv0.x < (start - offset * v_uv0.y) &&  v_uv0.x > (start - offset * v_uv0.y - width))\n      {\n          vec3 improve = strength * vec3(1, 1, 1);\n          vec3 result = improve * vec3( src_color.r, src_color.g, src_color.b);\n          gl_FragColor = vec4(result, src_color.a);\n    \n      }else{\n          gl_FragColor = src_color;\n      }\n  #endif\n}\n\n\n"
    }
  ],
  "subMetas": {}
}